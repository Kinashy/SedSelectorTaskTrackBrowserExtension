@page "/options.html"
@inherits BasePage
@code
{
    @inject HttpClient httpClient
    private class Person
    {
        public string login { get; set; }
        public string password { get; set; }
    }
    private class LoginResponse
    {
        public string token { get; set; }
    }
    
    private string _Status { get; set; }
    private string StatusTextColor { get; set; } = "red";
    private LoginResponse _LoginResponse { get; set; }
    private Person _Person = new Person();
    private WebExtensions.Net.Storage.StorageArea _Storage;
    protected override void OnInitialized()
    {
        GetLocalStorage();
        base.OnInitialized();
    }
    private async Task GetLocalStorage()
    {
        _Storage = await WebExtensions.Storage.GetLocal();
        Console.WriteLine("Storage was successfully got");
        await InvokeAsync(StateHasChanged);
    }
    async Task GetToken()
    {
        Console.WriteLine("Start getting token");
        var response = await httpClient.PostAsJsonAsync("api/auth/login", _Person);
        if (response.IsSuccessStatusCode)
        {
            _LoginResponse = await response.Content.ReadFromJsonAsync<LoginResponse>();
            _Status = $"Success<br/>token: {_LoginResponse.token}";
            Console.WriteLine(_LoginResponse.token);
            Console.WriteLine("Storage work set");
            string token = _LoginResponse.token;
            var login_response = _LoginResponse;
            await _Storage.Set(login_response);
            Console.WriteLine("Storage work get");
            var res = await _Storage.Get(new WebExtensions.Net.Storage.StorageAreaGetKeys("token"));
            Console.WriteLine(res.GetProperty("token").ToString());
            StatusTextColor = "green";
        }
        else
        {
            StatusTextColor = "red";
            _Status = "Unsuccess";
            Console.WriteLine(response.Content.ToString());
        }
    }
}
<div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col">
    <div class="mb-4">
        <label class="block text-grey-darker text-sm font-bold mb-2" for="username">
            Логин
        </label>
        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker" id="username" type="text"  placeholder="Username" @bind-value="_Person.login">
    </div>
    <div class="mb-6">
        <label class="block text-grey-darker text-sm font-bold mb-2" for="password">
            Пароль
        </label>
        <input class="shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mb-3" id="password" type="password" placeholder="******************" @bind-value="_Person.password">
        <p class="text-@StatusTextColor text-xs italic">@((MarkupString)_Status)</p>
    </div>
    <div class="flex items-center justify-center">
        <button class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-6 rounded" type="button" @onclick="GetToken">
            Войти
        </button>
    </div>
</div>